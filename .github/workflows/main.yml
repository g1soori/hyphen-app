
name: ci

on:
#  push:
  pull_request:  # This will trigger everytime push
#  workflow_dispatch: # Allows manually trigger workflow after every push

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # -
      #   name: Login to DockerHub
      #   uses: docker/login-action@v1 
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # -
      #   name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags: g1soori/hyphen-app:latest
      # -
      #   name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}
      - 
        name: Display the path
        run: echo $PATH
        shell: bash
      -
        name: Build the docker image
        run: docker buildx build . --tag jeewan/hyphen --load
      -
        name: Run the app
        run: docker run -d -p 50000:5000 jeewan/hyphen
      - 
        name: List running image
        run: docker ps
      - 
        name: List docker images
        run: docker image ls
      -
        name: Running ports
        run: netstat -tnlp
      - 
        name: Test the image
        # uses: actions/github-script@v4
        id: curl-result
        # run: curl -sS localhost:50000/api/tasks
        run: echo "::set-output name=foo::$(curl -sS localhost:50000/api/tasks)"
        # with:
          
        #   result-encoding: string    

      - name: 'Comment PR'
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          foo: ${{ steps.curl-result.outputs.foo }}
        with:
          msg: $foo
          

          #          message: "${{steps.test-result.outputs.result}}"



# name: test

# on: push

# jobs:

#   build:
#     runs-on: ubuntu-latest
 
#     steps:
#     - name: Step 1
#       id: step1
#       run: echo "::set-output name=VAR1::Hamel"


#     - name: emit env
#       run: |
#        echo $VAR1
        
#       env:
#         VAR1: ${{ steps.step1.outputs.VAR1 }}
