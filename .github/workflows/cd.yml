
name: CD

on:
  pull_request:
    types: [opened]
  issue_comment:
    types: [created, edited, deleted]

jobs:
  docker_push:
    name: Push Docker image to Docker Hub
    if: contains(github.event.comment.body, 'apply')
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: jeewansoori
          password: '${{ secrets.DOCKER_TOKEN }}' 
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: jeewansoori/hyphen-app

  tf_apply:
    name: Run Terraform apply
    if: contains(github.event.comment.body, 'apply')
    runs-on: ubuntu-latest
    needs: docker_push
    env:
      RESOURCE_PREFIX: tf
      LOCATION: southeastasia
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - 
        name: terraform setup
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.3
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Run TF initialize
        run: terraform init
        working-directory: k8s
      - 
        name: Run TF apply
        id: apply
        run: terraform apply -auto-approve -var resource_prefix=env.RESOURCE_PREFIX -var location=env.LOCATION
        working-directory: k8s        
      - 
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request' || ${{ success() }} || ${{ failure() }}
        env:
          APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plane ðŸ–Œ\`${{ steps.apply.outcome }}\`
            #### Terraform Apply ðŸ“–\`${{ steps.apply.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`${process.env.AAPLY}\`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - 
        name: automerge
        uses: "pascalgn/automerge-action@v0.14.1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: ""

#